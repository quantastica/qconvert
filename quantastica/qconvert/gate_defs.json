{
	"id": {
		"description": "Single qubit identity gate",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "ID"
		},
		"exportInfo": {
			"quil": {
				"name": "I"
			},
			"cirq": {
				"name": "I",
				"notTfqSupported": true
			},
			"quest": {
				"name": "compactUnitary",
				"params": {
					"alpha": "(Complex) { .real = 1, .imag = 0 }",
					"beta": "(Complex) {.real = 0, .imag = 0}"
				}
			},
			"qsharp": {
				"name": "I"
			},
			"qiskit": {
				"name": "iden"
			}
		}
	},
	"x": {
		"description": "Pauli X (PI rotation over X-axis) aka \"NOT\" gate",
		"matrix": [
			[
				0,
				1
			],
			[
				1,
				0
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "X"
		},
		"exportInfo": {
			"quil": {
				"name": "X"
			},
			"cirq": {
				"name": "X"
			},
			"quest": {
				"name": "pauliX"
			},
			"qsharp": {
				"name": "X"
			}
		}
	},
	"y": {
		"description": "Pauli Y (PI rotation over Y-axis)",
		"matrix": [
			[
				0,
				"-i"
			],
			[
				"i",
				0
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "Y"
		},
		"exportInfo": {
			"quil": {
				"name": "Y"
			},
			"cirq": {
				"name": "Y"
			},
			"quest": {
				"name": "pauliY"
			},
			"qsharp": {
				"name": "Y"
			}
		}
	},
	"z": {
		"description": "Pauli Z (PI rotation over Z-axis)",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				-1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "Z"
		},
		"exportInfo": {
			"quil": {
				"name": "Z"
			},
			"cirq": {
				"name": "Z"
			},
			"quest": {
				"name": "pauliZ"
			},
			"qsharp": {
				"name": "Z"
			}
		}
	},
	"h": {
		"description": "Hadamard gate",
		"matrix": [
			[
				"1 / sqrt(2)",
				"1 / sqrt(2)"
			],
			[
				"1 / sqrt(2)",
				"-1 / sqrt(2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "H"
		},
		"exportInfo": {
			"quil": {
				"name": "H"
			},
			"cirq": {
				"name": "H"
			},
			"quest": {
				"name": "hadamard"
			},
			"qsharp": {
				"name": "H"
			}
		}
	},
	"srn": {
		"description": "Square root of NOT",
		"matrix": [
			[
				"0.5+0.5i",
				"0.5-0.5i"
			],
			[
				"0.5-0.5i",
				"0.5+0.5i"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "&#x221A;NOT"
		},
		"exportInfo": {
			"quil": {
				"name": "srn",
				"defgate": "DEFGATE srn:\n    0.5+0.5i, 0.5-0.5i\n    0.5-0.5i, 0.5+0.5i"
			},
			"pyquil": {
				"name": "srn",
				"array": "[[0.5+0.5j, 0.5-0.5j], [0.5-0.5j, 0.5+0.5j]]"
			},
			"cirq": {
				"name": "X**(1/2)"
			},
			"quest": {
				"name": "unitary",
				"matrix": [
					[
						[
							"1/sqrt(2)",
							"0"
						],
						[
							"-1/sqrt(2)",
							"0"
						]
					],
					[
						[
							"-1/sqrt(2)",
							"0"
						],
						[
							"1/sqrt(2)",
							"0"
						]
					]
				]
			},
			"qasm": {
				"replacement": [
					{
						"name": "h",
						"params": {}
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						}
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "h",
						"params": {}
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						}
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						}
					}
				]
			}
		}
	},
	"r2": {
		"description": "PI/2 rotation over Z-axis aka \"Phase PI/2\"",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(i * pi / 2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "Z&#x1D6D1;/2"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "s"
				}
			},
			"cirq": {
				"replacement": {
					"name": "s"
				}
			},
			"quest": {
				"name": "sGate"
			},
			"qsharp": {
				"replacement": {
					"name": "s"
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "s",
						"params": {}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "s",
						"params": {}
					}
				]
			}
		}
	},
	"r4": {
		"description": "PI/4 rotation over Z-axis aka \"Phase PI/4\"",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(i * pi / 4)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "Z&#x1D6D1;/4"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "t"
				}
			},
			"cirq": {
				"replacement": {
					"name": "t"
				}
			},
			"quest": {
				"name": "tGate"
			},
			"qsharp": {
				"replacement": {
					"name": "t"
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "t",
						"params": {}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "t",
						"params": {}
					}
				]
			}
		}
	},
	"r8": {
		"description": "PI/8 rotation over Z-axis aka \"Phase PI/8\"",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(i * pi / 8)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "Z&#x1D6D1;/8"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "pi/8"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "pi/8"
					}
				}
			},
			"quest": {
				"name": "phaseShift",
				"params": {
					"theta": "M_PI/8"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "pi/8"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "u1",
						"params": {
							"lambda": "pi/8"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "u1",
						"params": {
							"lambda": "pi/8"
						}
					}
				]
			}
		}
	},
	"rx": {
		"description": "Rotation around the X-axis by given angle",
		"matrix": [
			[
				"cos(theta / 2)",
				"-i * sin(theta / 2)"
			],
			[
				"-i * sin(theta / 2)",
				"cos(theta / 2)"
			]
		],
		"params": [
			"theta"
		],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "RX"
		},
		"exportInfo": {
			"quil": {
				"name": "RX",
				"params": [
					"theta"
				]
			},
			"cirq": {
				"name": "rx",
				"params": [
					"theta"
				]
			},
			"quest": {
				"name": "rotateX",
				"params": [
					"theta"
				]
			},
			"qsharp": {
				"name": "Rx",
				"params": [
					"theta"
				]
			}
		}
	},
	"ry": {
		"description": "Rotation around the Y-axis by given angle",
		"matrix": [
			[
				"cos(theta / 2)",
				"-1 * sin(theta / 2)"
			],
			[
				"sin(theta / 2)",
				"cos(theta / 2)"
			]
		],
		"params": [
			"theta"
		],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "RY"
		},
		"exportInfo": {
			"quil": {
				"name": "RY",
				"params": [
					"theta"
				]
			},
			"cirq": {
				"name": "ry",
				"params": [
					"theta"
				]
			},
			"quest": {
				"name": "rotateY",
				"params": [
					"theta"
				]
			},
			"qsharp": {
				"name": "Ry",
				"params": [
					"theta"
				]
			}
		}
	},
	"rz": {
		"description": "Rotation around the Z-axis by given angle",
		"matrix": [
			[
				"cos(phi / 2) - i * sin(phi / 2)",
				0
			],
			[
				0,
				"cos(phi / 2) + i * sin(phi / 2)"
			]
		],
		"params": [
			"phi"
		],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "RZ"
		},
		"exportInfo": {
			"quil": {
				"name": "RZ",
				"params": [
					"phi"
				]
			},
			"cirq": {
				"name": "rz",
				"params": [
					"theta"
				]
			},
			"qsharp": {
				"name": "Rz",
				"params": [
					"theta"
				]
			}
		}
	},
	"u1": {
		"description": "1-parameter 0-pulse single qubit gate",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(i * lambda)"
			]
		],
		"params": [
			"lambda"
		],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "U1"
		},
		"exportInfo": {
			"quil": {
				"name": "PHASE",
				"params": [
					"lambda"
				]
			},
			"cirq": {
				"name": "u1",
				"params": [
					"lambda"
				],
				"array": "[[1, 0], [0, np.exp(1j*p_lambda)]]",
				"notTfqSupported": true
			},
			"quest": {
				"name": "phaseShift",
				"params": [
					"theta"
				]
			}
		}
	},
	"u2": {
		"description": "2-parameter 1-pulse single qubit gate",
		"matrix": [
			[
				"1 / sqrt(2)",
				"-exp(i * lambda) * 1 / sqrt(2)"
			],
			[
				"exp(i * phi) * 1 / sqrt(2)",
				"exp(i * lambda + i * phi) * 1 / sqrt(2)"
			]
		],
		"params": [
			"phi",
			"lambda"
		],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "U2"
		},
		"exportInfo": {
			"quil": {
				"name": "u2",
				"params": [
					"phi",
					"lambda"
				],
				"defgate": "DEFGATE u2(%phi, %lambda):\n    1/SQRT(2), -1*EXP(i*%lambda)*1/SQRT(2)\n    EXP(i*%phi)*1/SQRT(2), EXP(i*%lambda + i*%phi)*1/SQRT(2)"
			},
			"pyquil": {
				"name": "u2",
				"params": [
					"phi",
					"lambda"
				],
				"array": "[[1/quil_sqrt(2),-quil_exp(1j*p_lambda)*1/quil_sqrt(2)],[quil_exp(1j*p_phi)*1/quil_sqrt(2),quil_exp(1j*p_lambda+1j*p_phi)*1/quil_sqrt(2)]]"
			},
			"cirq": {
				"name": "u2",
				"params": [
					"phi",
					"lambda"
				],
				"array": "[[1/np.sqrt(2), -np.exp(1j*p_lambda)*1/np.sqrt(2)], [np.exp(1j*p_phi)*1/np.sqrt(2), np.exp(1j*p_lambda+1j*p_phi)*1/np.sqrt(2)]]",
				"notTfqSupported": true
			},
			"quest": {
				"name": "unitary",
				"params": [
					"phi",
					"lambda"
				],
				"matrix": [
					[
						[
							"1/sqrt(2)",
							"0"
						],
						[
							"-cos(lambda)/sqrt(2)",
							"-sin(lambda)/sqrt(2)"
						]
					],
					[
						[
							"cos(phi)/sqrt(2)",
							"sin(phi)/sqrt(2)"
						],
						[
							"cos(lambda+phi)/sqrt(2)",
							"sin(lambda+phi)/sqrt(2)"
						]
					]
				]
			}
		}
	},
	"u3": {
		"description": "3-parameter 2-pulse single qubit gate",
		"matrix": [
			[
				"cos(theta/2)",
				"-exp(i * lambda) * sin(theta / 2)"
			],
			[
				"exp(i * phi) * sin(theta / 2)",
				"exp(i * lambda + i * phi) * cos(theta / 2)"
			]
		],
		"params": [
			"theta",
			"phi",
			"lambda"
		],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "U3"
		},
		"exportInfo": {
			"quil": {
				"name": "u3",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"defgate": "DEFGATE u3(%theta, %phi, %lambda):\n    COS(%theta/2), -1*EXP(i*%lambda)*SIN(%theta/2)\n    EXP(i*%phi)*SIN(%theta/2), EXP(i*%lambda + i*%phi)*COS(%theta/2)"
			},
			"pyquil": {
				"name": "u3",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"array": "[[quil_cos(p_theta/2),-quil_exp(1j*p_lambda)*quil_sin(p_theta/2)],[quil_exp(1j*p_phi)*quil_sin(p_theta/2),quil_exp(1j*p_lambda+1j*p_phi)*quil_cos(p_theta/2)]]"
			},
			"cirq": {
				"name": "u3",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"array": "[[np.cos(p_theta/2), -np.exp(1j*p_lambda)*np.sin(p_theta/2)], [np.exp(1j*p_phi)*np.sin(p_theta/2), np.exp(1j*p_lambda+1j*p_phi)*np.cos(p_theta/2)]]",
				"notTfqSupported": true
			},
			"quest": {
				"name": "unitary",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"matrix": [
					[
						[
							"cos(theta/2)",
							"0"
						],
						[
							"-cos(lambda)*sin(theta/2)",
							"-sin(lambda)*sin(theta/2)"
						]
					],
					[
						[
							"cos(phi)*sin(theta/2)",
							"sin(phi)*sin(theta/2)"
						],
						[
							"cos(lambda+phi)*cos(theta/2)",
							"sin(lambda+phi)*cos(theta/2)"
						]
					]
				]
			}
		}
	},
	"s": {
		"description": "PI/2 rotation over Z-axis (synonym for `r2`)",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(i * pi / 2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "S"
		},
		"exportInfo": {
			"quil": {
				"name": "S"
			},
			"cirq": {
				"name": "S"
			},
			"quest": {
				"name": "sGate"
			},
			"qsharp": {
				"name": "S"
			}
		}
	},
	"t": {
		"description": "PI/4 rotation over Z-axis (synonym for `r4`)",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(i * pi / 4)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "T"
		},
		"exportInfo": {
			"quil": {
				"name": "T"
			},
			"cirq": {
				"name": "T"
			},
			"quest": {
				"name": "tGate"
			},
			"qsharp": {
				"name": "T"
			}
		}
	},
	"sdg": {
		"description": "(-PI/2) rotation over Z-axis",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(-1i * pi / 2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "S&#8224;"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "-pi/2"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "-pi/2"
					}
				}
			},
			"quest": {
				"name": "phaseShift",
				"params": {
					"theta": "-M_PI/2"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "-pi/2"
					}
				}
			}
		}
	},
	"tdg": {
		"description": "(-PI/4) rotation over Z-axis",
		"matrix": [
			[
				1,
				0
			],
			[
				0,
				"exp(-1i * pi / 4)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "T&#8224;"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "-pi/4"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "-pi/4"
					}
				}
			},
			"quest": {
				"name": "phaseShift",
				"params": {
					"theta": "-M_PI/4"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "u1",
					"params": {
						"lambda": "-pi/4"
					}
				}
			}
		}
	},
	"swap": {
		"description": "Swaps the state of two qubits.",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				0,
				1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"x",
				"x"
			],
			"label": "SWP"
		},
		"exportInfo": {
			"quil": {
				"name": "SWAP"
			},
			"cirq": {
				"name": "SWAP"
			},
			"quest": {
				"name": "swap",
				"func": "void swap(Qureg qubits, const int q1, const int q2) {\n    controlledNot(qubits, q1, q2);\n    controlledNot(qubits, q2, q1);\n    controlledNot(qubits, q1, q2);\n}"
			},
			"qsharp": {
				"name": "SWAP"
			}
		}
	},
	"srswap": {
		"description": "Square root of swap",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				"0.5 * (1 + i)",
				"0.5 * (1 - i)",
				0
			],
			[
				0,
				"0.5 * (1 - i)",
				"0.5 * (1 + i)",
				0
			],
			[
				0,
				0,
				0,
				1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box",
				"box"
			],
			"label": "&#x221A;SWP"
		},
		"exportInfo": {
			"quil": {
				"name": "srswap",
				"defgate": "DEFGATE srswap:\n    1, 0, 0, 0\n    0, 0.5+0.5i, 0.5-0.5i, 0\n    0, 0.5-0.5i, 0.5+0.5i, 0\n    0, 0, 0, 1"
			},
			"cirq": {
				"name": "SWAP**(1/2)"
			},
			"pyquil": {
				"name": "srswap",
				"array": "[[1,0,0,0],[0,0.5 * (1 + 1j),0.5 * (1 - 1j),0],[0,0.5 * (1 - 1j),0.5 * (1 + 1j),0],[0,0,0,1]]"
			},
			"quest": {
				"name": "srswap",
				"func": "void srswap(Qureg qubits, const int q1, const int q2) {\n    controlledNot(qubits, q2, q1);\n    rotateY(qubits, q2, M_PI/2);\n    rotateZ(qubits, q2, M_PI/16);\n    controlledNot(qubits, q1, q2);\n    rotateZ(qubits, q1, M_PI/8);\n    rotateZ(qubits, q2, -M_PI/8);\n    controlledNot(qubits, q1, q2);\n    rotateZ(qubits, q2, M_PI/16);\n    rotateY(qubits, q2, -M_PI/2);\n    controlledNot(qubits, q2, q1);\n}"
			},
			"qasm": {
				"equivalent": [
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "pi/2",
							"lambda": "-1*pi"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "-1*pi/2",
							"lambda": "pi"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/4",
							"phi": "-1*pi/2",
							"lambda": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "7*pi/4"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/4",
							"phi": "-1*pi",
							"lambda": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "pi",
							"lambda": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "-3*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "pi/2",
							"lambda": "0"
						},
						"wires": [
							1
						]
					}
				]
			},
			"qiskit": {
				"equivalent": [
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "pi/2",
							"lambda": "-1*pi"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "-1*pi/2",
							"lambda": "pi"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/4",
							"phi": "-1*pi/2",
							"lambda": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "7*pi/4"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/4",
							"phi": "-1*pi",
							"lambda": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "pi",
							"lambda": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "-3*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "pi/2",
							"lambda": "0"
						},
						"wires": [
							1
						]
					}
				]
			}
		}
	},
	"iswap": {
		"description": "Swaps the state of two qubits, applying a -i phase to q1 when it is in the 1 state and a -i phase to q2 when it is in the 0 state",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				0,
				"0+i",
				0
			],
			[
				0,
				"0+i",
				0,
				0
			],
			[
				0,
				0,
				0,
				1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box",
				"box"
			],
			"label": "iSWP"
		},
		"exportInfo": {
			"quil": {
				"name": "ISWAP"
			},
			"cirq": {
				"name": "ISWAP"
			},
			"qasm": {
				"equivalent": [
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "-1*pi/2",
							"lambda": "-1*pi"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "-1*pi/2",
							"lambda": "pi"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "3*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "3*pi/2",
							"lambda": "0"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "0"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi",
							"phi": "pi/4",
							"lambda": "-1*pi/4"
						},
						"wires": [
							1
						]
					}
				]
			},
			"qiskit": {
				"equivalent": [
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "-1*pi/2",
							"lambda": "-1*pi"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "-1*pi/2",
							"lambda": "pi"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "3*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "3*pi/2",
							"lambda": "0"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi/2",
							"phi": "0",
							"lambda": "0"
						},
						"wires": [
							0
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "pi",
							"phi": "pi/4",
							"lambda": "-1*pi/4"
						},
						"wires": [
							1
						]
					}
				]
			}
		}
	},
	"xy": {
		"description": "XY gate",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				"cos(phi / 2)",
				"1i * sin(phi / 2)",
				0
			],
			[
				0,
				"1i * sin(phi / 2)",
				"cos(phi / 2)",
				0
			],
			[
				0,
				0,
				0,
				1
			]
		],
		"params": [
			"phi"
		],
		"drawingInfo": {
			"connectors": [
				"box",
				"box"
			],
			"label": "XY"
		},
		"exportInfo": {
			"quil": {
				"name": "XY",
				"params": [
					"phi"
				]
			},
			"qasm": {
				"equivalent": [
					{
						"name": "rz",
						"params": {
							"phi": "3*pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-3*pi/4"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cz",
						"wires": [
							1,
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "phi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "phi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cz",
						"wires": [
							1,
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "3*pi/4"
						},
						"wires": [
							1
						]
					}
				]
			},
			"qiskit": {
				"equivalent": [
					{
						"name": "rz",
						"params": {
							"phi": "3*pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-3*pi/4"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cz",
						"wires": [
							1,
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "phi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "phi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cz",
						"wires": [
							1,
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "3*pi/4"
						},
						"wires": [
							1
						]
					}
				]
			},
			"cirq": {
				"name": "xy",
				"params": [
					"phi"
				],
				"array": "[[1, 0, 0, 0], [0, np.cos(p_phi/2), 1j*np.sin(p_phi/2), 0], [0, 1j*np.sin(p_phi/2), np.cos(p_phi/2), 0], [0, 0, 0, 1]]",
				"notTfqSupported": true
			}
		}
	},
	"cx": {
		"description": "Controlled NOT (CNOT) gate",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				0,
				1
			],
			[
				0,
				0,
				1,
				0
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"not"
			],
			"label": "X",
			"root": "x"
		},
		"exportInfo": {
			"quil": {
				"name": "CNOT"
			},
			"cirq": {
				"name": "CNOT"
			},
			"quest": {
				"name": "controlledNot"
			},
			"qsharp": {
				"name": "CNOT"
			}
		}
	},
	"cy": {
		"description": "Controlled Y gate (controlled rotation over Y-axis by PI)",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				0,
				"-1i"
			],
			[
				0,
				0,
				"i",
				0
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "Y",
			"root": "y"
		},
		"exportInfo": {
			"quest": {
				"name": "controlledPauliY"
			},
			"cirq": {
				"replacement": {
					"name": "y",
					"type": "controlled",
					"notTfqSupported": true
				}
			},
			"quil": {
				"name": "cy",
				"defgate": "DEFGATE cy:\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, 0, -i\n    0, 0, i, 0"
			},
			"pyquil": {
				"name": "cy",
				"array": "[[1,0,0,0],[0,1,0,0],[0,0,0,-1j],[0,0,1j,0]]"
			},
			"qsharp": {
				"name": "Controlled Y"
			}
		}
	},
	"cz": {
		"description": "Controlled Z gate (controlled rotation over Z-axis by PI)",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				-1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "Z",
			"root": "z"
		},
		"exportInfo": {
			"quil": {
				"name": "CZ"
			},
			"cirq": {
				"name": "CZ"
			},
			"quest": {
				"name": "controlledPhaseFlip"
			},
			"qsharp": {
				"name": "Controlled Z"
			}
		}
	},
	"ch": {
		"description": "Controlled Hadamard gate",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"1 / sqrt(2)",
				"1 / sqrt(2)"
			],
			[
				0,
				0,
				"1 / sqrt(2)",
				"-1 / sqrt(2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "H",
			"root": "h"
		},
		"exportInfo": {
			"quest": {
				"name": "controlledUnitary",
				"matrix": [
					[
						[
							"1/sqrt(2)",
							"0"
						],
						[
							"1/sqrt(2)",
							"0"
						]
					],
					[
						[
							"1/sqrt(2)",
							"0"
						],
						[
							"-1/sqrt(2)",
							"0"
						]
					]
				]
			},
			"cirq": {
				"replacement": {
					"name": "h",
					"type": "controlled",
					"notTfqSupported": true
				}
			},
			"quil": {
				"name": "ch",
				"defgate": "DEFGATE ch:\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, 0.7071067811865475, 0.7071067811865475\n    0, 0, 0.7071067811865475, -0.7071067811865475"
			},
			"pyquil": {
				"name": "ch",
				"array": "[[1,0,0,0],[0,1,0,0],[0,0,1/np.sqrt(2),1/np.sqrt(2)],[0,0,1/np.sqrt(2),-1/np.sqrt(2)]]"
			},
			"qsharp": {
				"name": "Controlled H"
			}
		}
	},
	"csrn": {
		"description": "Controlled square root of NOT",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"0.5+0.5i",
				"0.5-0.5i"
			],
			[
				0,
				0,
				"0.5-0.5i",
				"0.5+0.5i"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "&#x221A;NOT",
			"root": "srn"
		},
		"exportInfo": {
			"quest": {
				"name": "controlledUnitary",
				"matrix": [
					[
						[
							"-1/sqrt(2)",
							"0"
						],
						[
							"-1/sqrt(2)",
							"0"
						]
					],
					[
						[
							"-1/sqrt(2)",
							"0"
						],
						[
							"1/sqrt(2)",
							"0"
						]
					]
				]
			},
			"cirq": {
				"replacement": {
					"name": "srn",
					"type": "controlled",
					"notTfqSupported": true
				}
			},
			"quil": {
				"name": "csrn",
				"defgate": "DEFGATE csrn:\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, 0.5+0.5i, 0.5-0.5i\n    0, 0, 0.5-0.5i, 0.5+0.5i"
			},
			"qasm": {
				"equivalent": [
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "3*pi/4"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cz",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "cz",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							1
						]
					}
				]
			},
			"qiskit": {
				"equivalent": [
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "3*pi/4"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cz",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/4"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "cz",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "pi/2"
						},
						"wires": [
							0
						]
					},
					{
						"name": "rx",
						"params": {
							"theta": "-1*pi/2"
						},
						"wires": [
							1
						]
					},
					{
						"name": "rz",
						"params": {
							"phi": "-1*pi/2"
						},
						"wires": [
							1
						]
					}
				]
			},
			"pyquil": {
				"name": "csrn",
				"array": "[[1,0,0,0],[0,1,0,0],[0,0,0.5+0.5j,0.5-0.5j],[0,0,0.5-0.5j,0.5+0.5j]]"
			}
		}
	},
	"ms": {
		"description": "Mølmer-Sørensen gate",
		"matrix": [
			[
				"cos(theta)",
				0,
				0,
				"-i*sin(theta)"
			],
			[
				0,
				"cos(theta)",
				"-i*sin(theta)",
				0
			],
			[
				0,
				"-i*sin(theta)",
				"cos(theta)",
				0
			],
			[
				"-i*sin(theta)",
				0,
				0,
				"cos(theta)"
			]
		],
		"params": [
			"theta"
		],
		"drawingInfo": {
			"connectors": [
				"circle",
				"circle"
			],
			"label": "X"
		},
		"exportInfo": {
			"quil": {
				"name": "ms",
				"params": [
					"theta"
				],
				"defgate": "DEFGATE ms(%theta):\n    COS(%theta), 0, 0, -i*SIN(%theta)\n    0, COS(%theta), -i*SIN(%theta), 0\n    0, -i*SIN(%theta), COS(%theta), 0\n    -i*SIN(%theta), 0, 0, COS(%theta)"
			},
			"pyquil": {
				"name": "ms",
				"params": [
					"theta"
				],
				"array": "[ [quil_cos(p_theta), 0, 0, -1j*quil_sin(p_theta)], [0, quil_cos(p_theta), -1j*quil_sin(p_theta), 0], [0, -1j*quil_sin(p_theta), quil_cos(p_theta), 0], [-1j*quil_sin(p_theta), 0, 0, quil_cos(p_theta)] ]"
			},
			"cirq": {
				"name": "ms"
			},
			"quest": {
				"name": "ms",
				"func": "TODO"
			},
			"qiskit": {
				"name": "rxx"
			}
		}
	},
	"yy": {
		"description": "YY gate",
		"matrix": [
			[
				"cos(theta)",
				0,
				0,
				"i*sin(theta)"
			],
			[
				0,
				"cos(theta)",
				"-i*sin(theta)",
				0
			],
			[
				0,
				"-i*sin(theta)",
				"cos(theta)",
				0
			],
			[
				"i*sin(theta)",
				0,
				0,
				"cos(theta)"
			]
		],
		"params": [
			"theta"
		],
		"drawingInfo": {
			"connectors": [
				"circle",
				"circle"
			],
			"label": "Y"
		},
		"exportInfo": {
			"quil": {
				"name": "yy",
				"params": [
					"theta"
				],
				"defgate": "DEFGATE yy(%theta):\n    COS(%theta), 0, 0, i*SIN(%theta)\n    0, COS(%theta), -i*SIN(%theta), 0\n    0, -i*SIN(%theta), COS(%theta), 0\n    i*SIN(%theta), 0, 0, COS(%theta)"
			},
			"cirq": {
				"name": "YY"
			},
			"pyquil": {
				"name": "yy",
				"params": [
					"theta"
				],
				"array": "[ [quil_cos(p_theta), 0, 0, 1j*quil_sin(p_theta)], [0, quil_cos(p_theta), -1j*quil_sin(p_theta), 0], [0, -1j*quil_sin(p_theta), quil_cos(p_theta), 0], [1j*quil_sin(p_theta), 0, 0, quil_cos(p_theta)] ]"
			},
			"quest": {
				"name": "yy",
				"func": "TODO"
			}
		}
	},
	"cr2": {
		"description": "Controlled PI/2 rotation over Z-axis",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(i * pi / 2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "Z&#x1D6D1;/2",
			"root": "r2"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/2"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/2"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "M_PI/2"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/2"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/2"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/2"
						}
					}
				]
			}
		}
	},
	"cr4": {
		"description": "Controlled PI/4 rotation over Z-axis",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(i * pi / 4)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "Z&#x1D6D1;/4",
			"root": "r4"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/4"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/4"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "M_PI/4"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/4"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/4"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/4"
						}
					}
				]
			}
		}
	},
	"cr8": {
		"description": "Controlled PI/8 rotation over Z-axis",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(i * pi / 8)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "Z&#x1D6D1;/8",
			"root": "r8"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/8"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/8"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "M_PI/8"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/8"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/8"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/8"
						}
					}
				]
			}
		}
	},
	"crx": {
		"description": "Controlled rotation around the X-axis by given angle",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"cos(theta / 2)",
				"-1i * sin(theta / 2)"
			],
			[
				0,
				0,
				"-1i * sin(theta / 2)",
				"cos(theta / 2)"
			]
		],
		"params": [
			"theta"
		],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "RX",
			"root": "rx"
		},
		"exportInfo": {
			"quil": {
				"name": "crx",
				"params": [
					"theta"
				],
				"defgate": "DEFGATE crx(%theta):\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, COS(%theta/2), -i*SIN(%theta/2)\n    0, 0, -i*SIN(%theta/2), COS(%theta/2)"
			},
			"cirq": {
				"replacement": {
					"name": "rx",
					"params": {
						"theta": "theta"
					},
					"type": "controlled",
					"notTfqSupported": true
				}
			},
			"pyquil": {
				"name": "crx",
				"params": [
					"theta"
				],
				"array": "[[ 1, 0, 0, 0 ], [ 0, 1, 0, 0 ], [ 0, 0, quil_cos(p_theta / 2), -1j*quil_sin(p_theta / 2) ], [ 0, 0, -1j*quil_sin(p_theta / 2), quil_cos(p_theta / 2) ]]"
			},
			"quest": {
				"name": "controlledUnitary",
				"params": [
					"theta"
				],
				"matrix": [
					[
						[
							"cos(theta/2)",
							"0"
						],
						[
							"0",
							"-sin(theta/2)"
						]
					],
					[
						[
							"0",
							"-sin(theta/2)"
						],
						[
							"cos(theta/2)",
							"0"
						]
					]
				]
			},
			"qsharp": {
				"name": "Controlled Rx",
				"params": [
					"theta"
				]
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu3",
						"params": {
							"theta": "theta",
							"phi": "-1*pi/2",
							"lambda": "pi/2"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu3",
						"params": {
							"theta": "theta",
							"phi": "-1*pi/2",
							"lambda": "pi/2"
						}
					}
				]
			}
		}
	},
	"cry": {
		"description": "Controlled rotation around the Y-axis by given angle",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"cos(theta / 2)",
				"-1 * sin(theta / 2)"
			],
			[
				0,
				0,
				"sin(theta / 2)",
				"cos(theta / 2)"
			]
		],
		"params": [
			"theta"
		],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "RY",
			"root": "ry"
		},
		"exportInfo": {
			"quil": {
				"name": "cry",
				"params": [
					"theta"
				],
				"defgate": "DEFGATE cry(%theta):\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, COS(%theta/2), -1*SIN(%theta/2)\n    0, 0, SIN(%theta/2), COS(%theta/2)"
			},
			"cirq": {
				"replacement": {
					"name": "ry",
					"params": {
						"theta": "theta"
					},
					"type": "controlled",
					"notTfqSupported": true
				}
			},
			"pyquil": {
				"name": "cry",
				"params": [
					"theta"
				],
				"array": "[[ 1, 0, 0, 0 ],[ 0, 1, 0, 0 ],[ 0, 0, quil_cos(p_theta / 2), -1*quil_sin(p_theta / 2) ],[ 0, 0, quil_sin(p_theta / 2), quil_cos(p_theta / 2) ]]"
			},
			"quest": {
				"name": "controlledUnitary",
				"params": [
					"theta"
				],
				"matrix": [
					[
						[
							"cos(theta/2)",
							"0"
						],
						[
							"-sin(theta/2)",
							"0"
						]
					],
					[
						[
							"sin(theta/2)",
							"0"
						],
						[
							"cos(theta/2)",
							"0"
						]
					]
				]
			},
			"qsharp": {
				"name": "Controlled Ry",
				"params": [
					"theta"
				]
			},
			"qasm": {
				"equivalent": [
					{
						"name": "u3",
						"params": {
							"theta": "theta/2",
							"phi": "0",
							"lambda": "0"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "-1*theta / 2",
							"phi": "0",
							"lambda": "0"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					}
				]
			},
			"qiskit": {
				"equivalent": [
					{
						"name": "u3",
						"params": {
							"theta": "theta/2",
							"phi": "0",
							"lambda": "0"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					},
					{
						"name": "u3",
						"params": {
							"theta": "-1*theta / 2",
							"phi": "0",
							"lambda": "0"
						},
						"wires": [
							1
						]
					},
					{
						"name": "cx",
						"wires": [
							0,
							1
						]
					}
				]
			}
		}
	},
	"crz": {
		"description": "Controlled rotation around the Z-axis by given angle",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"cos(phi / 2) - i * sin(phi / 2)",
				0
			],
			[
				0,
				0,
				0,
				"cos(phi / 2) + i * sin(phi / 2)"
			]
		],
		"params": [
			"phi"
		],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "RZ",
			"root": "rz"
		},
		"exportInfo": {
			"quil": {
				"name": "crz",
				"params": [
					"phi"
				],
				"defgate": "DEFGATE crz(%phi):\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, COS(%phi / 2) - i * SIN(%phi / 2), 0\n    0, 0, 0, COS(%phi / 2) + i * SIN(%phi / 2)"
			},
			"pyquil": {
				"name": "crz",
				"params": [
					"phi"
				],
				"array": "[[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, quil_cos(p_phi / 2) - 1j * quil_sin(p_phi / 2), 0], [0, 0, 0, quil_cos(p_phi / 2) + 1j * quil_sin(p_phi / 2)]]"
			},
			"cirq": {
				"replacement": {
					"name": "rz",
					"params": {
						"phi": "phi"
					},
					"type": "controlled"
				}
			},
			"quest": {
				"name": "controlledRotateZ",
				"params": [
					"theta"
				]
			},
			"qsharp": {
				"name": "Controlled Rz",
				"params": [
					"phi"
				]
			}
		}
	},
	"cu1": {
		"description": "Controlled 1-parameter 0-pulse single qubit gate",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(i * lambda)"
			]
		],
		"params": [
			"lambda"
		],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "CU1",
			"root": "u1"
		},
		"exportInfo": {
			"quil": {
				"name": "CPHASE",
				"params": [
					"lambda"
				]
			},
			"cirq": {
				"name": "cu1",
				"params": [
					"lambda"
				],
				"array": "[[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 0], [0, 0, 0, np.exp(1j*p_lambda)]]",
				"notTfqSupported": true
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": [
					"theta"
				]
			}
		}
	},
	"cu2": {
		"description": "Controlled 2-parameter 1-pulse single qubit gate",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"1 / sqrt(2)",
				"-exp(i * lambda) * 1 / sqrt(2)"
			],
			[
				0,
				0,
				"exp(i * phi) * 1 / sqrt(2)",
				"exp(i * lambda + i * phi) * 1 / sqrt(2)"
			]
		],
		"params": [
			"phi",
			"lambda"
		],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "CU2",
			"root": "u2"
		},
		"exportInfo": {
			"quil": {
				"name": "cu2",
				"params": [
					"phi",
					"lambda"
				],
				"defgate": "DEFGATE cu2(%phi, %lambda):\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, 1/SQRT(2), -1*EXP(i*%lambda)*1/SQRT(2)\n    0, 0, EXP(i*%phi)*1/SQRT(2), EXP(i*%lambda + i*%phi)*1/SQRT(2)"
			},
			"pyquil": {
				"name": "cu2",
				"params": [
					"phi",
					"lambda"
				],
				"array": "[[1,0,0,0],[0,1,0,0],[0, 0, 1/quil_sqrt(2), -quil_exp(1j*p_lambda)*1/quil_sqrt(2)],[0, 0, quil_exp(1j*p_phi)*1/quil_sqrt(2), quil_exp(1j*p_lambda+1j*p_phi)*1/quil_sqrt(2)]]"
			},
			"cirq": {
				"name": "cu2",
				"params": [
					"phi",
					"lambda"
				],
				"array": "[[1,0,0,0],[0,1,0,0],[0, 0, 1/np.sqrt(2), -np.exp(1j*p_lambda)*1/np.sqrt(2)],[0, 0, np.exp(1j*p_phi)*1/np.sqrt(2), np.exp(1j*p_lambda+1j*p_phi)*1/np.sqrt(2)]]",
				"notTfqSupported": true
			},
			"quest": {
				"name": "controlledUnitary",
				"params": [
					"phi",
					"lambda"
				],
				"matrix": [
					[
						[
							"1/sqrt(2)",
							"0"
						],
						[
							"-cos(lambda)/sqrt(2)",
							"-sin(lambda)/sqrt(2)"
						]
					],
					[
						[
							"cos(phi)/sqrt(2)",
							"sin(phi)/sqrt(2)"
						],
						[
							"cos(lambda+phi)/sqrt(2)",
							"sin(lambda+phi)/sqrt(2)"
						]
					]
				]
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu3",
						"params": {
							"theta": "pi/2",
							"phi": "phi",
							"lambda": "lambda"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu3",
						"params": {
							"theta": "pi/2",
							"phi": "phi",
							"lambda": "lambda"
						}
					}
				]
			}
		}
	},
	"cu3": {
		"description": "Controlled 3-parameter 2-pulse single qubit gate",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				"cos(theta/2)",
				"-exp(i * lambda) * sin(theta / 2)"
			],
			[
				0,
				0,
				"exp(i * phi) * sin(theta / 2)",
				"exp(i * lambda + i * phi) * cos(theta / 2)"
			]
		],
		"params": [
			"theta",
			"phi",
			"lambda"
		],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "CU3",
			"root": "u3"
		},
		"exportInfo": {
			"quil": {
				"name": "cu3",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"defgate": "DEFGATE cu3(%theta, %phi, %lambda):\n    1, 0, 0, 0\n    0, 1, 0, 0\n    0, 0, COS(%theta/2), -1*EXP(i*%lambda)*SIN(%theta/2)\n    0, 0, EXP(i*%phi)*SIN(%theta/2), EXP(i*%lambda + i*%phi)*COS(%theta/2)"
			},
			"pyquil": {
				"name": "cu3",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"array": "[[1,0,0,0],[0,1,0,0],[0, 0, quil_cos(p_theta/2),-quil_exp(1j*p_lambda)*quil_sin(p_theta/2)],[0, 0, quil_exp(1j*p_phi)*quil_sin(p_theta/2),quil_exp(1j*p_lambda+1j*p_phi)*quil_cos(p_theta/2)]]"
			},
			"cirq": {
				"name": "cu3",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"array": "[[1,0,0,0],[0,1,0,0],[0, 0, np.cos(p_theta/2),-np.exp(1j*p_lambda)*np.sin(p_theta/2)],[0, 0, np.exp(1j*p_phi)*np.sin(p_theta/2),np.exp(1j*p_lambda+1j*p_phi)*np.cos(p_theta/2)]]",
				"notTfqSupported": true
			},
			"quest": {
				"name": "controlledUnitary",
				"params": [
					"theta",
					"phi",
					"lambda"
				],
				"matrix": [
					[
						[
							"cos(theta/2)",
							"0"
						],
						[
							"-cos(lambda)*sin(theta/2)",
							"-sin(lambda)*sin(theta/2)"
						]
					],
					[
						[
							"cos(phi)*sin(theta/2)",
							"sin(phi)*sin(theta/2)"
						],
						[
							"cos(lambda+phi)*cos(theta/2)",
							"sin(lambda+phi)*cos(theta/2)"
						]
					]
				]
			}
		}
	},
	"cs": {
		"description": "Controlled PI/2 rotation over Z-axis (synonym for `cr2`)",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(i * pi / 2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "S",
			"root": "s"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/2"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/2"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "M_PI/2"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/2"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/2"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/2"
						}
					}
				]
			}
		}
	},
	"ct": {
		"description": "Controlled PI/4 rotation over Z-axis (synonym for `cr4`)",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(i * pi / 4)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "T",
			"root": "t"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/4"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/4"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "M_PI/4"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "pi/4"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/4"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "pi/4"
						}
					}
				]
			}
		}
	},
	"csdg": {
		"description": "Controlled (-PI/2) rotation over Z-axis",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(-1i * pi / 2)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "S&#8224;",
			"root": "sdg"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "-pi/2"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "-pi/2"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "-M_PI/2"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "-pi/2"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "-pi/2"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "-pi/2"
						}
					}
				]
			}
		}
	},
	"ctdg": {
		"description": "Controlled (-PI/4) rotation over Z-axis",
		"matrix": [
			[
				1,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				"exp(-1i * pi / 4)"
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box"
			],
			"label": "T&#8224;",
			"root": "tdg"
		},
		"exportInfo": {
			"quil": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "-pi/4"
					}
				}
			},
			"cirq": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "-pi/4"
					}
				}
			},
			"quest": {
				"name": "controlledPhaseShift",
				"params": {
					"theta": "-M_PI/4"
				}
			},
			"qsharp": {
				"replacement": {
					"name": "cu1",
					"params": {
						"lambda": "-pi/4"
					}
				}
			},
			"qasm": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "-pi/4"
						}
					}
				]
			},
			"qiskit": {
				"replacement": [
					{
						"name": "cu1",
						"params": {
							"lambda": "-pi/4"
						}
					}
				]
			}
		}
	},
	"ccx": {
		"description": "Toffoli aka \"CCNOT\" gate",
		"matrix": [
			[
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1
			],
			[
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"dot",
				"not"
			],
			"label": "CCNOT",
			"root": "x"
		},
		"exportInfo": {
			"quil": {
				"name": "CCNOT"
			},
			"cirq": {
				"name": "CCX",
				"notTfqSupported": true
			},
			"quest": {
				"name": "ccx",
				"func": "void ccx(Qureg qubits, const int q1, const int q2, const int q3) {\n    hadamard(qubits, q3);\n    controlledNot(qubits, q2, q3);\n    phaseShift(qubits, q3, -M_PI/4);\n    controlledNot(qubits, q1, q3);\n    tGate(qubits, q3);\n    controlledNot(qubits, q2, q3);\n    phaseShift(qubits, q3, -M_PI/4);\n    controlledNot(qubits, q1, q3);\n    tGate(qubits, q2);\n    tGate(qubits, q3);\n    controlledNot(qubits, q1, q2);\n    hadamard(qubits, q3);\n    tGate(qubits, q1);\n    phaseShift(qubits, q2, -M_PI/4);\n    controlledNot(qubits, q1, q2);\n}"
			},
			"qsharp": {
				"name": "CCNOT"
			}
		}
	},
	"cswap": {
		"description": "Controlled swap aka \"Fredkin\" gate",
		"matrix": [
			[
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				0,
				1,
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				1,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"x",
				"x"
			],
			"label": "SWP",
			"root": "swap"
		},
		"exportInfo": {
			"cirq": {
				"name": "CSWAP"
			},
			"quest": {
				"name": "cswap",
				"func": "void cswap(Qureg qubits, const int q1, const int q2, const int q3) {\n    controlledNot(qubits, q3, q2);\n    hadamard(qubits, q3);\n    controlledNot(qubits, q2, q3);\n    phaseShift(qubits, q3, -M_PI/4);\n    controlledNot(qubits, q1, q3);\n    tGate(qubits, q3);\n    controlledNot(qubits, q2, q3);\n    phaseShift(qubits, q3, -M_PI/4);\n    controlledNot(qubits, q1, q3);\n    tGate(qubits, q2);\n    tGate(qubits, q3);\n    hadamard(qubits, q3);\n    controlledNot(qubits, q1, q2);\n    tGate(qubits, q1);\n    phaseShift(qubits, q2, -M_PI/4);\n    controlledNot(qubits, q2, q3);\n    controlledNot(qubits, q3, q2);\n}"
			},
			"qsharp": {
				"name": "Controlled SWAP"
			},
			"quil": {
				"name": "CSWAP"
			},
			"pyquil": {
				"name": "CSWAP"
			}
		}
	},
	"csrswap": {
		"description": "Controlled square root of swap",
		"matrix": [
			[
				1,
				0,
				0,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				1,
				0,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				1,
				0,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				1,
				0,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				1,
				0,
				0,
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				"0.5 * (1 + i)",
				"0.5 * (1 - i)",
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				"0.5 * (1 - i)",
				"0.5 * (1 + i)",
				0
			],
			[
				0,
				0,
				0,
				0,
				0,
				0,
				0,
				1
			]
		],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"dot",
				"box",
				"box"
			],
			"label": "&#x221A;SWP",
			"root": "srswap"
		},
		"exportInfo": {
			"quest": {
				"name": "csrswap",
				"func": "TODO"
			},
			"cirq": {
				"replacement": {
					"name": "srswap",
					"type": "controlled",
					"notTfqSupported": true
				}
			},
			"quil": {
				"name": "csrswap",
				"defgate": "DEFGATE csrswap:\n    1, 0, 0, 0, 0, 0, 0, 0\n    0, 1, 0, 0, 0, 0, 0, 0\n    0, 0, 1, 0, 0, 0, 0, 0\n    0, 0, 0, 1, 0, 0, 0, 0\n    0, 0, 0, 0, 1, 0, 0, 0\n    0, 0, 0, 0, 0, 0.5+0.5i, 0.5-0.5i, 0\n    0, 0, 0, 0, 0, 0.5-0.5i, 0.5+0.5i, 0\n    0, 0, 0, 0, 0, 0, 0, 1"
			},
			"pyquil": {
				"name": "csrswap",
				"array": "[[1,0,0,0,0,0,0,0],[0,1,0,0,0,0,0,0],[0,0,1,0,0,0,0,0],[0,0,0,1,0,0,0,0],[0,0,0,0,1,0,0,0],[0,0,0,0,0,0.5 * (1 + 1j),0.5 * (1 - 1j),0],[0,0,0,0,0,0.5 * (1 - 1j),0.5 * (1 + 1j),0],[0,0,0,0,0,0,0,1]]"
			}
		}
	},
	"reset": {
		"description": "Resets qubit",
		"matrix": [],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"box"
			],
			"label": "RST"
		},
		"exportInfo": {
			"quil": {
				"name": "RESET"
			},
			"cirq": {
				"name": "reset",
				"notTfqSupported": true
			},
			"quest": {
				"name": "reset",
				"func": "TODO"
			},
			"qsharp": {
				"name": "Reset"
			}
		}
	},
	"measure": {
		"description": "Measures qubit and stores chance (0 or 1) into classical bit",
		"matrix": [],
		"params": [],
		"drawingInfo": {
			"connectors": [
				"gauge"
			],
			"label": ""
		},
		"exportInfo": {
			"quil": {
				"name": "MEASURE"
			},
			"cirq": {
				"name": "measure"
			},
			"quest": {
				"name": "measure"
			},
			"qsharp": {
				"name": "M"
			}
		}
	}
}
